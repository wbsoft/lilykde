How to install Frescobaldi:
===========================

To install Frescobaldi in /usr/local:

  cmake .
  make
  make install

To install Frescobaldi in your distributions default KDE4 directory (also 
recommended for creating installable distribution packages):

  cmake . -DCMAKE_INSTALL_PREFIX=$(kde4-config --exec-prefix)
  make
  make install


Try Frescobaldi without installing:
===================================

Just run the 'run' script:

  ./run

If your system is missing some necessary software, the script will inform you.
If everything is fine, Frescobaldi will be added to your Applications menu
and started right away without installing anything. An executable 'frescobaldi'
will be created in the current directory as well.

Running the 'run' script again will give you the option to remove Frescobaldi
from your Applications menu.


Installing Frescobaldi from SVN:
================================

If you install Frescobaldi from a SubVersion checkout, you need a very recent
LilyPond, ImageMagick and GNU Gettext to built the LilyPond-generated icons and
the translations.

If you install Frescobaldi from a released tarball (e.g.
frescobaldi-1.1.3.tar.gz), the icons and translations are already prebuilt.
The makedist.sh shell script creates a tar ball from a SVN checkout.


Dependencies:
=============

This is the development (1.1) branch of Frescobaldi. It depends on:
- Python 2.6
- python-dbus (http://www.freedesktop.org/wiki/Software/DBusBindings#python)
- Qt     >= 4.6
- SIP    >= 4.9.3
- PyQt4  >= 4.6
- KDE4   >= 4.3.2. Modules needed: kdelibs, Okular and Konsole
- PyKDE4 >= 4.0.2 Rev 2

You also might need to install some of the the corresponding -dev packages from
the above to install Frescobaldi from this source package.


CMake command line options:
===========================

The installation can be customized in a few ways.

If you don't want to install the User Guide (some Linux distros split
applications and their documentation), add -DHANDBOOK=NO to the cmake command
line.

If you don't want to bytecompile the Python modules on install (some Linux
distros want their own installers to do that), add -DBYTECOMPILE=NO to the cmake
command line.

If you get errors about missing Python modules, but you're sure that they are
installed, CMake might be finding the wrong Python version. If you e.g. install
PyKDE4 inside Python 2.6 but CMake is finding Python 2.5 then you get errors
about missing modules. You can fix this by explicitly defining the Python
interpreter to use. Add -DPYTHON_EXECUTABLE=/usr/bin/python2.6 to the cmake
command line in that case.

If you install Frescobaldi from a SVN checkout (or have removed the prebuilt/
directory) the icons in pics/ will need to be rebuilt using LilyPond and convert
(from ImageMagick). You can define the locations of those programs using the
LILYPOND_EXECUTABLE and the CONVERT_EXECUTABLE CMake variables. Otherwise the
programs are searched for in the PATH environment variable. You need at least
LilyPond-2.13.19 to build the icons.

If you install Frescobaldi from a SVN checkout (or have removed the prebuilt/
directory) the translations in po/ will need to be rebuilt using Gettext's
msgfmt tool. If this tool is not in your $PATH, you can define the
GETTEXT_MSGFMT_EXECUTABLE CMake variable.


Other useful programs to use with Frescobaldi:
==============================================

Some other useful programs to use together with Frescobaldi are:
- LilyPond (of course!) http://lilypond.org/
- Rumor                 http://www.volny.cz/smilauer/rumor/
- a MIDI player like timidity++, etc.

